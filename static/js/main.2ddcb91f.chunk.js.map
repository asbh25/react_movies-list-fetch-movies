{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/omdbApi.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","fetchMovie","a","fetch","data","json","FindMovie","addMovie","useState","query","setQuery","warning","setWarning","previewMovie","setPreview","findMovie","Response","Title","Plot","Poster","imdbID","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","classname","input","value","onChange","target","onClick","App","setMovies","find","existingMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ddcb91f.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const URL = 'https://www.omdbapi.com/?apikey=f7dddb7c&t=';\n\nexport const fetchMovie = async(title) => {\n  const data = await fetch(`${URL}${title}`);\n\n  return data.json();\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classname from 'classnames';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport movies from '../../api/movies.json';\nimport { fetchMovie } from '../../api/omdbApi';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [query, setQuery] = useState('');\n  const [warning, setWarning] = useState(false);\n  const [previewMovie, setPreview] = useState(movies[0]);\n\n  const findMovie = async() => {\n    const movie = await fetchMovie(query);\n\n    if (movie.Response !== 'False') {\n      setPreview(\n        {\n          title: movie.Title,\n          description: movie.Plot,\n          imgUrl: movie.Poster,\n          imdbUrl: `https://www.imdb.com/title${movie.imdbID}`,\n          imdbId: movie.imdbID,\n        },\n      );\n    } else {\n      setWarning(true);\n      setPreview(null);\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => {\n          event.preventDefault();\n        }}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classname({\n                input: true,\n                'is-danger': warning,\n              })}\n              value={query}\n              onChange={({ target }) => {\n                setQuery(target.value);\n                setWarning(false);\n              }}\n            />\n          </div>\n          {warning && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => findMovie()}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                setQuery('');\n                if (previewMovie !== null) {\n                  addMovie(previewMovie);\n                  setPreview(null);\n                }\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        {previewMovie\n        && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard {...previewMovie} />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addMovie = (movie) => {\n    if (movies.find(existingMovie => existingMovie.imdbId === movie.imdbId)) {\n      return;\n    }\n\n    setMovies([\n      ...movies,\n      movie,\n    ]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}